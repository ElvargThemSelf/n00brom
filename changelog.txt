Version 0.30b (09-16-2020) by Lameguy64 and sicklebrick:

* Added serial handshake and flow control code. Should not affect
  configurations that don't use handshake/flow control lines as long
  as DTR and and RTS are kept high on PC side, or DSR and CTS are
  left floating (unconnected) on console side.

* Improved serial IRQ routine to avoid serial download issues when the
  PSn00bDEBUG-mk2 monitor has been patched in.
  
* Fixed bug where pressing Start often brings up the ROM menu instead of
  initiating the CD-ROM boot sequence.

Changes by sicklebrick:

* Fixed and restored low-level pad routines + additional tweaks.

* Added analog input support.

* Tweaked disclaimer text.

* Some script cleanups.


Version 0.28b (07-31-2020) by Lameguy64:

* Exception handler now uses the SystemErrorUnresolvedException() vector of
  the BIOS. No longer requires patching/backing up the CPU exception vector
  which can potentially cause incompatibilities. New exception handler is
  smaller as well which reduces the size of n00bROM by a good several
  hundred bytes.
  
* Exception handler now skips pollhost() break opcodes (break 1024)
  allowing DTL-H2000 prototypes to run on retail consoles, provided it
  does not use PCDRV break opcodes (not yet supported) or sim: device.

* Added SRAM jump routine for Xplorer cartridges, to be used by debug
  monitors.

* Added patch binary capability for serial and Xplorer interfaces, to be
  used by debuggers or to apply custom kernel patches to the console.

* Fixed unstable/broken binary file download over serial. Also fixed binary
  file downloading causing the home screen to enter screensaver mode when using
  either serial or Xplorer comms interfaces.
  
* Improved Ez-Swap with a SetSession command, allowing redbook audio to play
  properly with the swap trick boot method.

xpcomms updates:
  
* Added missing init command for polling the xpcomms pcdrv version, in case
  anyone needs it.


Version 0.25a (05-28-2020) by Lameguy64:

* Inverted PC handshake logic in Xplorer comms which may improve reliability in
  certain cases due to the way how /dev/parport works.
  
* Removed CD-ROM bootstrap routine, replaced with the BIOS' CD-ROM
  bootstrap routine for increased compatibility and reduces the size of
  n00bROM. Midbook bootstrap sequence has been modified to allow returning
  execution to the BIOS bootstrap routine.

* Fixed bug where uploading binary data can corrupt the stack. May not be
  noticeable with PS-EXEs but may cause a crash when uploading more than one
  binary file.  
  
* Added SystemErrorBootOrDiscFailure() hook to trap CD-ROM boot failures.
  
* Added dummy function hooks to serial TTY, Xplorer TTY and PCDRV devices to
  avoid crashes when calling unsupported device functions.
  
* Added batch file for building n00bROM under Windows, eliminating the need for
  MSys2 just to build n00bROM from source.
  
* Added support for downloading ROM image from Xplorer parallel port interface
  in Flash Mode.
  
* Fixed bug where UNLK will display in the configuration string when exception
  is enabled and not based on the boot mode setting.

* Some code clean-up.
  
xpcomms updates:

* Added PS-EXE upload auto retry.

* Ported to Win32 using inpout32.

* Added -dir option to specify PC file server initial directory.

* Fixed typo where xpcomms is called xpsend in the help text.

* Fixed select line reset not working due to a typo in xp_ClearPort()
  function of libxplorer.
  
* Fixed binary upload option entering PCDRV server and TTY monitor mode.

* Updated help text a bit.


04-23-2020 by Lameguy64:

* Replaced xpsend tool with the more capable xpcomms utility.

* Added PCDRV file access over Xplorer cartridge's parallel port. BIOS file
  functions such as open(), close(), read(), write(), firstfile() and 
  nextfile() are implemented.

* Some code tidying up.

* Temporarily replaced custom pad routines with BIOS pad routines, as custom
  pad routines aren't working properly on PAL units. Remember to turn off
  analog on controller when uploading via serial as the pad handler would slow
  down the kernel's interrupt handler enough to throw off SIO downloads.

* Improved reliability of built-in flasher by performing EEPROM writes with
  interrupts disabled.


04-11-2020 by Lameguy64:

* Initial release
